package org.zaproxy.zap.extension.websocket.pscan;

import org.parosproxy.paros.common.AbstractParam;

public class WebSocketPassiveScanParam extends AbstractParam{
    
    static final String PASSIVE_SCANS_BASE_KEY = "pscans";
    private static final String ALL_AUTO_TAG_SCANNERS_KEY = PASSIVE_SCANS_BASE_KEY + ".autoTagScanners.scanner";
    
    private static final String AUTO_TAG_SCANNER_NAME_KEY = "name";
    private static final String AUTO_TAG_SCANNER_TYPE_KEY = "type";
    private static final String AUTO_TAG_SCANNER_CONFIG_KEY = "config";
    private static final String AUTO_TAG_SCANNER_REQ_URL_REGEX_KEY = "reqUrlRegex";
    private static final String AUTO_TAG_SCANNER_REQ_HEAD_REGEX_KEY = "reqHeadRegex";
    private static final String AUTO_TAG_SCANNER_RES_HEAD_REGEX_KEY = "resHeadRegex";
    private static final String AUTO_TAG_SCANNER_RES_BODY_REGEX_KEY = "resBodyRegex";
    private static final String AUTO_TAG_SCANNER_ENABLED_KEY = "enabled";
    
    private static final String CONFIRM_REMOVE_AUTO_TAG_SCANNER_KEY = PASSIVE_SCANS_BASE_KEY + ".confirmRemoveAutoTagScanner";
    
    private static final String SCAN_ONLY_IN_SCOPE_KEY = PASSIVE_SCANS_BASE_KEY + ".scanOnlyInScope";
    private static final String SCAN_FUZZER_MESSAGES_KEY = PASSIVE_SCANS_BASE_KEY + ".scanFuzzerMessages";
    
    
    /**
     * Flag that indicates whether or not the passive scan should be performed only on messages that are in scope.
     * <p>
     * Default is {@code false}, all messages are scanned.
     */
    private boolean scanOnlyInScope;
    
    /**
     * Flag that indicates whether or not the passive scan should be performed on traffic generated by the fuzzer.
     * <p>
     * Default is {@code false}, fuzzer traffic is not scanned.
     */
    private boolean scanFuzzerMessages;
    
    
    @Override
    protected void parse() {
    
    }
}
